<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Shopping Cart</title><style>body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f9f9f9;
}

.cart-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 15px;
    background: #fff;
    border-bottom: 1px solid #e0e0e0;
    margin: 10px;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.product-info {
    display: flex;
    gap: 20px;
    align-items: center;
}

.product-info img {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 5px;
}

.product-details {
    display: flex;
    flex-direction: column;
}

.product-details span {
    margin: 3px 0;
}

.product-details .name {
    font-weight: bold;
    font-size: 16px;
}

.product-details .price {
    color: #555;
    font-size: 14px;
}

.price-and-quantity {
    display: flex;
    align-items: center;
    gap: 15px;
}

.price-and-quantity .price {
    font-size: 18px;
    font-weight: bold;
}

.quantity-control {
    display: flex;
    align-items: center;
    gap: 10px;
}

.quantity-control button {
    width: 30px;
    height: 30px;
    border: none;
    border-radius: 50%;
    background: #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    cursor: pointer;
}

.quantity-control button:hover {
    background: #d9d9d9;
}

.quantity-control span {
    font-size: 16px;
    font-weight: bold;
}

.edit-button {
    background: #f0f0f0;
    border: 1px solid #ccc;
    padding: 5px 10px;
    border-radius: 3px;
    cursor: pointer;
}

.edit-button:hover {
    background: #e0e0e0;
}

</style></head><body><div id="cart" class="cart"><div v-for="item in cart" :key="item.product.name" class="cart-item"><div class="product-info"><img :src="item.product.image" :alt="item.product.name"><div class="product-details"><span class="name"> {
    {
        item.product.name
    }
}

</span><span class="weight"> {
    {
        item.product.weight
    }
}

</span><span class="price">$ {
    {
        item.product.price
    }
}

</span></div></div><div class="price-and-quantity"><div><span class="price">$ {
    {
        item.subtotal.toFixed(2)
    }
}

</span><button @click="editSubtotal(item)" class="edit-button">修改</button></div><div class="quantity-control"><button @click="decreaseQuantity(item.product)">-</button><span> {
    {
        item.quantity
    }
}

</span><button @click="increaseQuantity(item.product)">+</button></div></div></div><div class="cart-total"><h3>總計: $ {
    {
        cartTotal.toFixed(2)
    }
}

</h3></div></div><script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script><script>new Vue( {
    el: '#cart', data: {
        cart: [ {
            product: {
                name: '日正DIY泡打粉', weight: '48g (12gx4 入)', price: 35, image: 'image-placeholder.jpg'
            }
            , quantity: 1, subtotal: 35
        }
        ],
    }
    , computed: {
        cartTotal() {
            return this.cart.reduce((total, item)=> total + item.subtotal, 0);
        }
    }
    , methods: {
        parsePrice(price) {
            return parseFloat(price).toFixed(2);
        }
        , decreaseQuantity(product) {
            const item=this.cart.find(i=> i.product===product);
            if (item && item.quantity > 1) {
                item.quantity--;
                item.subtotal=item.product.price * item.quantity;
            }
        }
        , increaseQuantity(product) {
            const item=this.cart.find(i=> i.product===product);
            if (item) {
                item.quantity++;
                item.subtotal=item.product.price * item.quantity;
            }
        }
        , editSubtotal(item) {
            const newPrice=parseFloat(prompt('請輸入新的小計', item.subtotal));
            if (!isNaN(newPrice) && newPrice > 0) {
                item.subtotal=newPrice;
                item.quantity=Math.round(newPrice / item.product.price);
            }
        }
    }
}

);
</script><!-- Code injected by live-server --><script> // <![CDATA[  <-- For SVG support
if ('WebSocket' in window) {
    (function () {
        function refreshCSS() {
            var sheets=[].slice.call(document.getElementsByTagName("link"));
            var head=document.getElementsByTagName("head")[0];
            for (var i=0;
            i < sheets.length;
            ++i) {
                var elem=sheets[i];
                var parent=elem.parentElement || head;
                parent.removeChild(elem);
                var rel=elem.rel;
                if (elem.href && typeof rel !="string" || rel.length==0 || rel.toLowerCase()=="stylesheet") {
                    var url=elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
                    elem.href=url + (url.indexOf('?') >=0 ? '&': '?') + '_cacheOverride=' + (new Date().valueOf());
                }
                parent.appendChild(elem);
            }
        }
        var protocol=window.location.protocol==='http:' ? 'ws://': 'wss://';
        var address=protocol + window.location.host + window.location.pathname + '/ws';
        var socket=new WebSocket(address);
        socket.onmessage=function (msg) {
            if (msg.data=='reload') window.location.reload();
            else if (msg.data=='refreshcss') refreshCSS();
        }
        ;
        if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
            console.log('Live reload enabled.');
            sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
        }
    }
    )();
}

else {
    console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
}

// ]]>
</script></body></html>